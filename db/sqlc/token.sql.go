// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.14.0
// source: token.sql

package db

import (
	"context"

	"github.com/google/uuid"
	"github.com/lib/pq"
)

const createToken = `-- name: CreateToken :one
INSERT INTO tokens (
  audience,
  token,
  expires_in,
  scope,
  authorities
) VALUES (
  $1, $2, $3, $4, $5
) RETURNING jti
`

type CreateTokenParams struct {
	Audience    string   `json:"audience"`
	Token       string   `json:"token"`
	ExpiresIn   int32    `json:"expires_in"`
	Scope       []string `json:"scope"`
	Authorities []string `json:"authorities"`
}

func (q *Queries) CreateToken(ctx context.Context, arg CreateTokenParams) (uuid.UUID, error) {
	row := q.queryRow(ctx, q.createTokenStmt, createToken,
		arg.Audience,
		arg.Token,
		arg.ExpiresIn,
		pq.Array(arg.Scope),
		pq.Array(arg.Authorities),
	)
	var jti uuid.UUID
	err := row.Scan(&jti)
	return jti, err
}
